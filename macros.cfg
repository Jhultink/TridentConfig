#####################################################################
#   Macros
#####################################################################

[gcode_macro PRINT_START]
gcode:
    {% set bed_temp = params.BED | default(60) | int %}
    {% set extruder_temp = (params.EXTRUDER | default(200) | int) %}
    {% set MATERIAL = params.MATERIAL|default('PLA')|string %}

    ; Set bed temp and extruder to 150C for probing
    RESPOND MSG='Heating bed and extruder'
    M140 S{bed_temp}
    M104 S150 

    ; Wait to reach temps
    M190 S{bed_temp}
    M109 S150 
    
    G28
    RESPOND MSG="Running Z Tilt"
    Z_TILT_ADJUST
    G28
    RESPOND MSG='Running Bed Mesh Calibrate'
    BED_MESH_CALIBRATE
    M109 S150
    G28 ; Rehome

    {% if MATERIAL == 'ABS' %}
      HEAT_SOAK_TARGET CHAMBER_TEMP=40
      M190 S{bed_temp} # reset bed temp
    {% endif %}

    RESPOND MSG='Setting final extruder temp'
    M109 S{extruder_temp}
    PURGE_LINE           

[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro PURGE_LINE]
gcode:
  RESPOND MSG='Drawing purge line'
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X10 Y10 Z0.3 F5000.0 ; Move to start position
  G1 X200 Y10.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 X200 Y9.7 Z0.3 F5000.0 ; Move to side a little
  G1 X10 Y9.7 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z5.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed and let out nozzle pressure
  G1 X0 Y15 Z0.4; Move back to heat bed, sticking blob of filament down before travel move to free nozzle
  G1 Z5.0 F3000

[gcode_macro HEAT_SOAK_TARGET]
gcode:
  {% set MIN_TEMP = 30 %}
  {% set TARGET_TEMP = params.CHAMBER_TEMP | default(35) | float %}
  {% set CHAMBER_CURRENT_TEMP = printer["temperature_sensor chamber"].temperature %}
  {% if TARGET_TEMP > CHAMBER_CURRENT_TEMP %}
  { action_respond_info('Chamber temperature is %.1fC. Heating to above %.1fC' % (CHAMBER_CURRENT_TEMP, TARGET_TEMP)) }
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=50
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100
    M106 S255 # part fan
    _CG28
    G0 X175 Y175 Z30 F3600
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={params.CHAMBER_TEMP} ; Wait for chamber temp
  {% else %}
    { action_respond_info('Chamber temperature is %.1fC which is above target of %.1fC' % (CHAMBER_CURRENT_TEMP, TARGET_TEMP)) }
  {% endif %}
  
[gcode_macro HEAT_SOAK]
description: heats the bed for a while

variable_target_temp: 0
variable_stage: None ## heating -> soaking -> done -> None

## in seconds
variable_check_interval: 10
variable_soak_time_remaining: 0
variable_total_time_elapsed: 0

gcode:
    {% set TARGET = params.TARGET | default(100) | float %}
    {% set DURATION = (params.DURATION | default(20) | int) * 60 %} ## minutes to seconds

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE={ TARGET }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage               VALUE="'heating'"
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ DURATION }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    ;; fire up the heater
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }

    ;; run the fan to circulate air
    ; _SET_FAN_SPEED PERCENT=50

    ;; put the bed and nozzle where they're a safe distance apart
    G28

    M84 ;; turn off steppers

    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ check_interval }

[gcode_macro CANCEL_HEAT_SOAK]
description: cancels an in-progress HEAT_SOAK cycle
gcode:
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'cancel'"
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION=1

[delayed_gcode heat_soaker]
; ## debug
; { action_respond_info( printer['gcode_macro HEAT_SOAK'] | tojson )}
gcode:
    {% set heat_soak = printer['gcode_macro HEAT_SOAK'] %}

    ## update total time elapsed
    {% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }

    {% set stage = heat_soak.stage %}
    {% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
        {% set stage = "soaking" %}
    {% endif %}

    {% if stage == "soaking" %}
        ## update soak countdown
        {% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }

        {% if soak_time_remaining == 0 %}
            {% set stage = "done" %}
        {% endif %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'{ stage }'"

    {% if stage in ("done", "cancel") %}

        {% if stage == "cancel" %}
            {% set stage = "done" %}
            TURN_OFF_HEATERS
            M107 ; turn off fan

            M117 { "soak cancelled after ~%.1fm" | format(total_time_elapsed / 60.0) }
        {% else %}
            M117 { "soak complete after %.1fm" | format(total_time_elapsed / 60.0) }
        {% endif %}

        ## reset all state vars, except stage, which may be queried via the api
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    {% else %}

        {% if total_time_elapsed % 90 == 0 %}
            ## output status periodically
            {% if stage == "heating" %}
                M117 { "heating -- %.1fm elapsed" | format(total_time_elapsed / 60.0) }
            {% elif stage == "soaking" %}
                M117 { "soaking -- %.1fm remaining" | format(soak_time_remaining / 60.0) }
            {% endif %}
        {% endif %}

        ## trigger ourselves again
        UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ heat_soak.check_interval }

        ## dwell for 1ms to prevent from going idle
        G4 P1

    {% endif %}
[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}   

[gcode_macro UNLOAD_PLA]
gcode:
  _UNLOAD TEMP=210

[gcode_macro LOAD_PLA]
gcode:
  _LOAD TEMP=210
  
[gcode_macro UNLOAD_ABS]
gcode:
  _UNLOAD TEMP=250

[gcode_macro LOAD_ABS]
gcode:
  _LOAD TEMP=250
  
[gcode_macro _UNLOAD]
gcode:
   {% set TEMP = params.TEMP | default(200) | float %}   
   _CG28
   G1 X150 Y150 Z80               ; move to servicing position
   M109 S{TEMP}
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-10 F3000                  ; jerk the filament out of the melt zone
   G1 E-50 F1800                  ; retract the rest of the way
   G1 E-50 F1800                  ; retract the rest of the way
   M82
   M109 S0

[gcode_macro _LOAD]
gcode:
   {% set TEMP = params.TEMP | default(200) | float %}   
   _CG28
   M109 S{TEMP}
   G1 X150 Y150 Z80               ; move to servicing position
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E50 F150                    ; prime nozzle with filament
   G1 E-10 F900                   ; unload a bit to prevent ooze
   M82
   M109 S0